# docker-compose.yml

version: '3.8'
services:
  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'

  meetup-microservice:
    build:
      context: .
      dockerfile: ./apps/meetup/Dockerfile
    command: npm run start:dev meetup && generate:meetup:docker && migrate:meetup:docker && seed:meetup:docker
    env_file:
      - ./apps/meetup/.envDocker
    depends_on:
      - postgres-meetup
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  authorization-microservice:
    build:
      context: .
      dockerfile: ./apps/authorization/Dockerfile
    command: npm run start:dev authorization && generate:auth:docker && migrate:auth:docker && seed:auth:docker
    env_file:
      - ./apps/authorization/.envDocker
    depends_on:
      - postgres-auth
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    command: npm run start:dev api-gateway
    env_file:
      - ./apps/api-gateway/.envDocker
    depends_on:
      - authorization-microservice
      - rabbitmq
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 3000:3000

  postgres-auth:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=auth_microservice_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  postgres-meetup:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=957483
      - POSTGRES_DB=meetup_microservice_db
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5433
    expose:
      - '5433'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5433:5433'
    command:
      - -p 5433

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.1
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    networks:
      - es-net
    ports:
      - 9200:9200

  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:8.9.1
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    volumes:
      - kibanadata:/usr/share/kibana/data

networks:
  es-net:
    driver: bridge

volumes:
  postgres:
  esdata:
    driver: local
  kibanadata:
    driver: local
